// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// CMGetFitRankLoss
NumericMatrix CMGetFitRankLoss(NumericMatrix Z, NumericVector t, NumericVector lambda, NumericVector phi, bool Parabola);
RcppExport SEXP _harper_CMGetFitRankLoss(SEXP ZSEXP, SEXP tSEXP, SEXP lambdaSEXP, SEXP phiSEXP, SEXP ParabolaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type t(tSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< bool >::type Parabola(ParabolaSEXP);
    rcpp_result_gen = Rcpp::wrap(CMGetFitRankLoss(Z, t, lambda, phi, Parabola));
    return rcpp_result_gen;
END_RCPP
}
// minSSEC
NumericMatrix minSSEC(NumericMatrix Q, NumericMatrix Z);
RcppExport SEXP _harper_minSSEC(SEXP QSEXP, SEXP ZSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Q(QSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Z(ZSEXP);
    rcpp_result_gen = Rcpp::wrap(minSSEC(Q, Z));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_harper_CMGetFitRankLoss", (DL_FUNC) &_harper_CMGetFitRankLoss, 5},
    {"_harper_minSSEC", (DL_FUNC) &_harper_minSSEC, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_harper(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
